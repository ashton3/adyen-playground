/*
 * Adyen Wherever People Pay
 * This is the Adyen API Playground where you can test our API's. <br /><br />You can find out more about Adyen      at <a href=\"http://www.adyen.com\">http://www.adyen.com</a>.  <!--For this sample, you can use the api key \"special-key\" to test the authorization filters.-->
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Amount;
import io.swagger.client.model.FraudResult;

/**
 * PaymentResult
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-16T14:22:24.496+01:00")
public class PaymentResult {
  @SerializedName("authCode")
  private String authCode = null;

  @SerializedName("paRequest")
  private String paRequest = null;

  @SerializedName("issuerUrl")
  private String issuerUrl = null;

  @SerializedName("md")
  private String md = null;

  @SerializedName("dccAmount")
  private Amount dccAmount = null;

  @SerializedName("dccSignature")
  private String dccSignature = null;

  @SerializedName("pspReference")
  private String pspReference = null;

  /**
   * the result of the payment
   */
  public enum ResultCodeEnum {
    @SerializedName("Authorised")
    AUTHORISED("Authorised"),
    
    @SerializedName("PartiallyAuthorised")
    PARTIALLYAUTHORISED("PartiallyAuthorised"),
    
    @SerializedName("Refused")
    REFUSED("Refused"),
    
    @SerializedName("Error")
    ERROR("Error"),
    
    @SerializedName("Cancelled")
    CANCELLED("Cancelled"),
    
    @SerializedName("Received")
    RECEIVED("Received"),
    
    @SerializedName("RedirectShopper")
    REDIRECTSHOPPER("RedirectShopper");

    private String value;

    ResultCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("resultCode")
  private ResultCodeEnum resultCode = null;

  @SerializedName("additionalData")
  private String additionalData = null;

  @SerializedName("refusalReason")
  private String refusalReason = null;

  @SerializedName("fraudResult")
  private FraudResult fraudResult = null;

  public PaymentResult authCode(String authCode) {
    this.authCode = authCode;
    return this;
  }

   /**
   * the authorisation code if the payment was successful
   * @return authCode
  **/
  @ApiModelProperty(value = "the authorisation code if the payment was successful")
  public String getAuthCode() {
    return authCode;
  }

  public void setAuthCode(String authCode) {
    this.authCode = authCode;
  }

  public PaymentResult paRequest(String paRequest) {
    this.paRequest = paRequest;
    return this;
  }

   /**
   * the 3D request data for the issuer
   * @return paRequest
  **/
  @ApiModelProperty(value = "the 3D request data for the issuer")
  public String getPaRequest() {
    return paRequest;
  }

  public void setPaRequest(String paRequest) {
    this.paRequest = paRequest;
  }

  public PaymentResult issuerUrl(String issuerUrl) {
    this.issuerUrl = issuerUrl;
    return this;
  }

   /**
   * the URL to direct the shopper to
   * @return issuerUrl
  **/
  @ApiModelProperty(value = "the URL to direct the shopper to")
  public String getIssuerUrl() {
    return issuerUrl;
  }

  public void setIssuerUrl(String issuerUrl) {
    this.issuerUrl = issuerUrl;
  }

  public PaymentResult md(String md) {
    this.md = md;
    return this;
  }

   /**
   * the payment session
   * @return md
  **/
  @ApiModelProperty(value = "the payment session")
  public String getMd() {
    return md;
  }

  public void setMd(String md) {
    this.md = md;
  }

  public PaymentResult dccAmount(Amount dccAmount) {
    this.dccAmount = dccAmount;
    return this;
  }

   /**
   * Get dccAmount
   * @return dccAmount
  **/
  @ApiModelProperty(value = "")
  public Amount getDccAmount() {
    return dccAmount;
  }

  public void setDccAmount(Amount dccAmount) {
    this.dccAmount = dccAmount;
  }

  public PaymentResult dccSignature(String dccSignature) {
    this.dccSignature = dccSignature;
    return this;
  }

   /**
   * Get dccSignature
   * @return dccSignature
  **/
  @ApiModelProperty(value = "")
  public String getDccSignature() {
    return dccSignature;
  }

  public void setDccSignature(String dccSignature) {
    this.dccSignature = dccSignature;
  }

  public PaymentResult pspReference(String pspReference) {
    this.pspReference = pspReference;
    return this;
  }

   /**
   * the unique reference that is associated with the payment
   * @return pspReference
  **/
  @ApiModelProperty(value = "the unique reference that is associated with the payment")
  public String getPspReference() {
    return pspReference;
  }

  public void setPspReference(String pspReference) {
    this.pspReference = pspReference;
  }

  public PaymentResult resultCode(ResultCodeEnum resultCode) {
    this.resultCode = resultCode;
    return this;
  }

   /**
   * the result of the payment
   * @return resultCode
  **/
  @ApiModelProperty(value = "the result of the payment")
  public ResultCodeEnum getResultCode() {
    return resultCode;
  }

  public void setResultCode(ResultCodeEnum resultCode) {
    this.resultCode = resultCode;
  }

  public PaymentResult additionalData(String additionalData) {
    this.additionalData = additionalData;
    return this;
  }

   /**
   * a map of name/value pairs for passing in additional/industry-specific data
   * @return additionalData
  **/
  @ApiModelProperty(value = "a map of name/value pairs for passing in additional/industry-specific data")
  public String getAdditionalData() {
    return additionalData;
  }

  public void setAdditionalData(String additionalData) {
    this.additionalData = additionalData;
  }

  public PaymentResult refusalReason(String refusalReason) {
    this.refusalReason = refusalReason;
    return this;
  }

   /**
   * the mapped refusal reason
   * @return refusalReason
  **/
  @ApiModelProperty(value = "the mapped refusal reason")
  public String getRefusalReason() {
    return refusalReason;
  }

  public void setRefusalReason(String refusalReason) {
    this.refusalReason = refusalReason;
  }

  public PaymentResult fraudResult(FraudResult fraudResult) {
    this.fraudResult = fraudResult;
    return this;
  }

   /**
   * the fraud result properties of the payment
   * @return fraudResult
  **/
  @ApiModelProperty(value = "the fraud result properties of the payment")
  public FraudResult getFraudResult() {
    return fraudResult;
  }

  public void setFraudResult(FraudResult fraudResult) {
    this.fraudResult = fraudResult;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentResult paymentResult = (PaymentResult) o;
    return Objects.equals(this.authCode, paymentResult.authCode) &&
        Objects.equals(this.paRequest, paymentResult.paRequest) &&
        Objects.equals(this.issuerUrl, paymentResult.issuerUrl) &&
        Objects.equals(this.md, paymentResult.md) &&
        Objects.equals(this.dccAmount, paymentResult.dccAmount) &&
        Objects.equals(this.dccSignature, paymentResult.dccSignature) &&
        Objects.equals(this.pspReference, paymentResult.pspReference) &&
        Objects.equals(this.resultCode, paymentResult.resultCode) &&
        Objects.equals(this.additionalData, paymentResult.additionalData) &&
        Objects.equals(this.refusalReason, paymentResult.refusalReason) &&
        Objects.equals(this.fraudResult, paymentResult.fraudResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authCode, paRequest, issuerUrl, md, dccAmount, dccSignature, pspReference, resultCode, additionalData, refusalReason, fraudResult);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentResult {\n");
    
    sb.append("    authCode: ").append(toIndentedString(authCode)).append("\n");
    sb.append("    paRequest: ").append(toIndentedString(paRequest)).append("\n");
    sb.append("    issuerUrl: ").append(toIndentedString(issuerUrl)).append("\n");
    sb.append("    md: ").append(toIndentedString(md)).append("\n");
    sb.append("    dccAmount: ").append(toIndentedString(dccAmount)).append("\n");
    sb.append("    dccSignature: ").append(toIndentedString(dccSignature)).append("\n");
    sb.append("    pspReference: ").append(toIndentedString(pspReference)).append("\n");
    sb.append("    resultCode: ").append(toIndentedString(resultCode)).append("\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    refusalReason: ").append(toIndentedString(refusalReason)).append("\n");
    sb.append("    fraudResult: ").append(toIndentedString(fraudResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

